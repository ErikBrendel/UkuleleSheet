#!/usr/bin/env python3

import os

SONGS_DIR = "songs"

OUT_FILE = "tex/songs.tex"


def split_song(song_content):
    song_content.append("")
    song_content.append("")
    title = song_content.pop(0).strip()
    if title.endswith(':'):
        title = title[:-1]

    chord_lines = [song_content.pop(0)]
    while len(chord_lines[-1]) == 0:
        chord_lines.append(song_content.pop(0))
    while len(chord_lines[-1]) > 0:
        chord_lines.append(song_content.pop(0))
    chord_lines.pop()
    chords = '   '.join(chord_lines).strip()

    lyrics = '\n'.join(song_content).strip()

    return [title, chords, lyrics]


def latex_lyrics(raw_lyrics):
    return raw_lyrics.replace("\n", "\\\\\n").replace("[Ref]", "\emph{[Ref]}")


def latex_song(song_data):
    title = song_data[0]
    chords = song_data[1].replace('/', '|').replace('|', "$\mid$")
    lyrics = latex_lyrics(song_data[2])
    if len(lyrics) > 0:
        lyrics = "\n" + lyrics + "\n"
    return "\song{" + title + "}{" + chords + "}{" + lyrics + "}\n\n"


########
# MAIN #
########

print("refreshing songs...")

if not os.path.exists(SONGS_DIR):
    exit("Could not find songs directory!")

if not os.path.exists(OUT_FILE):
    exit("The file " + OUT_FILE + " does not exist!")

song_names = sorted(os.listdir(SONGS_DIR))
songs = []

for songName in song_names:
    path = os.path.join(SONGS_DIR, songName)
    with open(path, 'r') as song_file:
        song_file_content = song_file.readlines()
        songs.append(split_song([line.strip() for line in song_file_content]))

with open(OUT_FILE, 'w') as out_file:
    out_file.write("% This file was automatically generated by the updateSongs - script\n"
                   "% and will get overwritten by it again. Do not modify it!\n\n")
    for song in songs:
        song_serialized = latex_song(song)
        out_file.write("%s\n" % song_serialized)

print("Done.")
